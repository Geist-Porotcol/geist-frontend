/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { ethers, EventFilter, Signer, BigNumber, BigNumberish, PopulatedTransaction } from 'ethers';
import { Contract, ContractTransaction, CallOverrides } from '@ethersproject/contracts';
import { BytesLike } from '@ethersproject/bytes';
import { Listener, Provider } from '@ethersproject/providers';
import { FunctionFragment, EventFragment, Result } from '@ethersproject/abi';

interface StakeUiHelperIInterface extends ethers.utils.Interface {
  functions: {
    'getStkAaveData(address)': FunctionFragment;
    'getStkBptData(address)': FunctionFragment;
    'getUserUIData(address)': FunctionFragment;
  };

  encodeFunctionData(functionFragment: 'getStkAaveData', values: [string]): string;
  encodeFunctionData(functionFragment: 'getStkBptData', values: [string]): string;
  encodeFunctionData(functionFragment: 'getUserUIData', values: [string]): string;

  decodeFunctionResult(functionFragment: 'getStkAaveData', data: BytesLike): Result;
  decodeFunctionResult(functionFragment: 'getStkBptData', data: BytesLike): Result;
  decodeFunctionResult(functionFragment: 'getUserUIData', data: BytesLike): Result;

  events: {};
}

export class StakeUiHelperI extends Contract {
  connect(signerOrProvider: Signer | Provider | string): this;
  attach(addressOrName: string): this;
  deployed(): Promise<this>;

  on(event: EventFilter | string, listener: Listener): this;
  once(event: EventFilter | string, listener: Listener): this;
  addListener(eventName: EventFilter | string, listener: Listener): this;
  removeAllListeners(eventName: EventFilter | string): this;
  removeListener(eventName: any, listener: Listener): this;

  interface: StakeUiHelperIInterface;

  functions: {
    getStkAaveData(
      user: string,
      overrides?: CallOverrides
    ): Promise<{
      0: {
        stakeTokenTotalSupply: BigNumber;
        stakeCooldownSeconds: BigNumber;
        stakeUnstakeWindow: BigNumber;
        stakeTokenPriceEth: BigNumber;
        rewardTokenPriceEth: BigNumber;
        stakeApy: BigNumber;
        distributionPerSecond: BigNumber;
        distributionEnd: BigNumber;
        stakeTokenUserBalance: BigNumber;
        underlyingTokenUserBalance: BigNumber;
        userCooldown: BigNumber;
        userIncentivesToClaim: BigNumber;
        userPermitNonce: BigNumber;
        0: BigNumber;
        1: BigNumber;
        2: BigNumber;
        3: BigNumber;
        4: BigNumber;
        5: BigNumber;
        6: BigNumber;
        7: BigNumber;
        8: BigNumber;
        9: BigNumber;
        10: BigNumber;
        11: BigNumber;
        12: BigNumber;
      };
    }>;

    'getStkAaveData(address)'(
      user: string,
      overrides?: CallOverrides
    ): Promise<{
      0: {
        stakeTokenTotalSupply: BigNumber;
        stakeCooldownSeconds: BigNumber;
        stakeUnstakeWindow: BigNumber;
        stakeTokenPriceEth: BigNumber;
        rewardTokenPriceEth: BigNumber;
        stakeApy: BigNumber;
        distributionPerSecond: BigNumber;
        distributionEnd: BigNumber;
        stakeTokenUserBalance: BigNumber;
        underlyingTokenUserBalance: BigNumber;
        userCooldown: BigNumber;
        userIncentivesToClaim: BigNumber;
        userPermitNonce: BigNumber;
        0: BigNumber;
        1: BigNumber;
        2: BigNumber;
        3: BigNumber;
        4: BigNumber;
        5: BigNumber;
        6: BigNumber;
        7: BigNumber;
        8: BigNumber;
        9: BigNumber;
        10: BigNumber;
        11: BigNumber;
        12: BigNumber;
      };
    }>;

    getStkBptData(
      user: string,
      overrides?: CallOverrides
    ): Promise<{
      0: {
        stakeTokenTotalSupply: BigNumber;
        stakeCooldownSeconds: BigNumber;
        stakeUnstakeWindow: BigNumber;
        stakeTokenPriceEth: BigNumber;
        rewardTokenPriceEth: BigNumber;
        stakeApy: BigNumber;
        distributionPerSecond: BigNumber;
        distributionEnd: BigNumber;
        stakeTokenUserBalance: BigNumber;
        underlyingTokenUserBalance: BigNumber;
        userCooldown: BigNumber;
        userIncentivesToClaim: BigNumber;
        userPermitNonce: BigNumber;
        0: BigNumber;
        1: BigNumber;
        2: BigNumber;
        3: BigNumber;
        4: BigNumber;
        5: BigNumber;
        6: BigNumber;
        7: BigNumber;
        8: BigNumber;
        9: BigNumber;
        10: BigNumber;
        11: BigNumber;
        12: BigNumber;
      };
    }>;

    'getStkBptData(address)'(
      user: string,
      overrides?: CallOverrides
    ): Promise<{
      0: {
        stakeTokenTotalSupply: BigNumber;
        stakeCooldownSeconds: BigNumber;
        stakeUnstakeWindow: BigNumber;
        stakeTokenPriceEth: BigNumber;
        rewardTokenPriceEth: BigNumber;
        stakeApy: BigNumber;
        distributionPerSecond: BigNumber;
        distributionEnd: BigNumber;
        stakeTokenUserBalance: BigNumber;
        underlyingTokenUserBalance: BigNumber;
        userCooldown: BigNumber;
        userIncentivesToClaim: BigNumber;
        userPermitNonce: BigNumber;
        0: BigNumber;
        1: BigNumber;
        2: BigNumber;
        3: BigNumber;
        4: BigNumber;
        5: BigNumber;
        6: BigNumber;
        7: BigNumber;
        8: BigNumber;
        9: BigNumber;
        10: BigNumber;
        11: BigNumber;
        12: BigNumber;
      };
    }>;

    getUserUIData(
      user: string,
      overrides?: CallOverrides
    ): Promise<{
      0: {
        stakeTokenTotalSupply: BigNumber;
        stakeCooldownSeconds: BigNumber;
        stakeUnstakeWindow: BigNumber;
        stakeTokenPriceEth: BigNumber;
        rewardTokenPriceEth: BigNumber;
        stakeApy: BigNumber;
        distributionPerSecond: BigNumber;
        distributionEnd: BigNumber;
        stakeTokenUserBalance: BigNumber;
        underlyingTokenUserBalance: BigNumber;
        userCooldown: BigNumber;
        userIncentivesToClaim: BigNumber;
        userPermitNonce: BigNumber;
        0: BigNumber;
        1: BigNumber;
        2: BigNumber;
        3: BigNumber;
        4: BigNumber;
        5: BigNumber;
        6: BigNumber;
        7: BigNumber;
        8: BigNumber;
        9: BigNumber;
        10: BigNumber;
        11: BigNumber;
        12: BigNumber;
      };
      1: {
        stakeTokenTotalSupply: BigNumber;
        stakeCooldownSeconds: BigNumber;
        stakeUnstakeWindow: BigNumber;
        stakeTokenPriceEth: BigNumber;
        rewardTokenPriceEth: BigNumber;
        stakeApy: BigNumber;
        distributionPerSecond: BigNumber;
        distributionEnd: BigNumber;
        stakeTokenUserBalance: BigNumber;
        underlyingTokenUserBalance: BigNumber;
        userCooldown: BigNumber;
        userIncentivesToClaim: BigNumber;
        userPermitNonce: BigNumber;
        0: BigNumber;
        1: BigNumber;
        2: BigNumber;
        3: BigNumber;
        4: BigNumber;
        5: BigNumber;
        6: BigNumber;
        7: BigNumber;
        8: BigNumber;
        9: BigNumber;
        10: BigNumber;
        11: BigNumber;
        12: BigNumber;
      };
      2: BigNumber;
    }>;

    'getUserUIData(address)'(
      user: string,
      overrides?: CallOverrides
    ): Promise<{
      0: {
        stakeTokenTotalSupply: BigNumber;
        stakeCooldownSeconds: BigNumber;
        stakeUnstakeWindow: BigNumber;
        stakeTokenPriceEth: BigNumber;
        rewardTokenPriceEth: BigNumber;
        stakeApy: BigNumber;
        distributionPerSecond: BigNumber;
        distributionEnd: BigNumber;
        stakeTokenUserBalance: BigNumber;
        underlyingTokenUserBalance: BigNumber;
        userCooldown: BigNumber;
        userIncentivesToClaim: BigNumber;
        userPermitNonce: BigNumber;
        0: BigNumber;
        1: BigNumber;
        2: BigNumber;
        3: BigNumber;
        4: BigNumber;
        5: BigNumber;
        6: BigNumber;
        7: BigNumber;
        8: BigNumber;
        9: BigNumber;
        10: BigNumber;
        11: BigNumber;
        12: BigNumber;
      };
      1: {
        stakeTokenTotalSupply: BigNumber;
        stakeCooldownSeconds: BigNumber;
        stakeUnstakeWindow: BigNumber;
        stakeTokenPriceEth: BigNumber;
        rewardTokenPriceEth: BigNumber;
        stakeApy: BigNumber;
        distributionPerSecond: BigNumber;
        distributionEnd: BigNumber;
        stakeTokenUserBalance: BigNumber;
        underlyingTokenUserBalance: BigNumber;
        userCooldown: BigNumber;
        userIncentivesToClaim: BigNumber;
        userPermitNonce: BigNumber;
        0: BigNumber;
        1: BigNumber;
        2: BigNumber;
        3: BigNumber;
        4: BigNumber;
        5: BigNumber;
        6: BigNumber;
        7: BigNumber;
        8: BigNumber;
        9: BigNumber;
        10: BigNumber;
        11: BigNumber;
        12: BigNumber;
      };
      2: BigNumber;
    }>;
  };

  getStkAaveData(
    user: string,
    overrides?: CallOverrides
  ): Promise<{
    stakeTokenTotalSupply: BigNumber;
    stakeCooldownSeconds: BigNumber;
    stakeUnstakeWindow: BigNumber;
    stakeTokenPriceEth: BigNumber;
    rewardTokenPriceEth: BigNumber;
    stakeApy: BigNumber;
    distributionPerSecond: BigNumber;
    distributionEnd: BigNumber;
    stakeTokenUserBalance: BigNumber;
    underlyingTokenUserBalance: BigNumber;
    userCooldown: BigNumber;
    userIncentivesToClaim: BigNumber;
    userPermitNonce: BigNumber;
    0: BigNumber;
    1: BigNumber;
    2: BigNumber;
    3: BigNumber;
    4: BigNumber;
    5: BigNumber;
    6: BigNumber;
    7: BigNumber;
    8: BigNumber;
    9: BigNumber;
    10: BigNumber;
    11: BigNumber;
    12: BigNumber;
  }>;

  'getStkAaveData(address)'(
    user: string,
    overrides?: CallOverrides
  ): Promise<{
    stakeTokenTotalSupply: BigNumber;
    stakeCooldownSeconds: BigNumber;
    stakeUnstakeWindow: BigNumber;
    stakeTokenPriceEth: BigNumber;
    rewardTokenPriceEth: BigNumber;
    stakeApy: BigNumber;
    distributionPerSecond: BigNumber;
    distributionEnd: BigNumber;
    stakeTokenUserBalance: BigNumber;
    underlyingTokenUserBalance: BigNumber;
    userCooldown: BigNumber;
    userIncentivesToClaim: BigNumber;
    userPermitNonce: BigNumber;
    0: BigNumber;
    1: BigNumber;
    2: BigNumber;
    3: BigNumber;
    4: BigNumber;
    5: BigNumber;
    6: BigNumber;
    7: BigNumber;
    8: BigNumber;
    9: BigNumber;
    10: BigNumber;
    11: BigNumber;
    12: BigNumber;
  }>;

  getStkBptData(
    user: string,
    overrides?: CallOverrides
  ): Promise<{
    stakeTokenTotalSupply: BigNumber;
    stakeCooldownSeconds: BigNumber;
    stakeUnstakeWindow: BigNumber;
    stakeTokenPriceEth: BigNumber;
    rewardTokenPriceEth: BigNumber;
    stakeApy: BigNumber;
    distributionPerSecond: BigNumber;
    distributionEnd: BigNumber;
    stakeTokenUserBalance: BigNumber;
    underlyingTokenUserBalance: BigNumber;
    userCooldown: BigNumber;
    userIncentivesToClaim: BigNumber;
    userPermitNonce: BigNumber;
    0: BigNumber;
    1: BigNumber;
    2: BigNumber;
    3: BigNumber;
    4: BigNumber;
    5: BigNumber;
    6: BigNumber;
    7: BigNumber;
    8: BigNumber;
    9: BigNumber;
    10: BigNumber;
    11: BigNumber;
    12: BigNumber;
  }>;

  'getStkBptData(address)'(
    user: string,
    overrides?: CallOverrides
  ): Promise<{
    stakeTokenTotalSupply: BigNumber;
    stakeCooldownSeconds: BigNumber;
    stakeUnstakeWindow: BigNumber;
    stakeTokenPriceEth: BigNumber;
    rewardTokenPriceEth: BigNumber;
    stakeApy: BigNumber;
    distributionPerSecond: BigNumber;
    distributionEnd: BigNumber;
    stakeTokenUserBalance: BigNumber;
    underlyingTokenUserBalance: BigNumber;
    userCooldown: BigNumber;
    userIncentivesToClaim: BigNumber;
    userPermitNonce: BigNumber;
    0: BigNumber;
    1: BigNumber;
    2: BigNumber;
    3: BigNumber;
    4: BigNumber;
    5: BigNumber;
    6: BigNumber;
    7: BigNumber;
    8: BigNumber;
    9: BigNumber;
    10: BigNumber;
    11: BigNumber;
    12: BigNumber;
  }>;

  getUserUIData(
    user: string,
    overrides?: CallOverrides
  ): Promise<{
    0: {
      stakeTokenTotalSupply: BigNumber;
      stakeCooldownSeconds: BigNumber;
      stakeUnstakeWindow: BigNumber;
      stakeTokenPriceEth: BigNumber;
      rewardTokenPriceEth: BigNumber;
      stakeApy: BigNumber;
      distributionPerSecond: BigNumber;
      distributionEnd: BigNumber;
      stakeTokenUserBalance: BigNumber;
      underlyingTokenUserBalance: BigNumber;
      userCooldown: BigNumber;
      userIncentivesToClaim: BigNumber;
      userPermitNonce: BigNumber;
      0: BigNumber;
      1: BigNumber;
      2: BigNumber;
      3: BigNumber;
      4: BigNumber;
      5: BigNumber;
      6: BigNumber;
      7: BigNumber;
      8: BigNumber;
      9: BigNumber;
      10: BigNumber;
      11: BigNumber;
      12: BigNumber;
    };
    1: {
      stakeTokenTotalSupply: BigNumber;
      stakeCooldownSeconds: BigNumber;
      stakeUnstakeWindow: BigNumber;
      stakeTokenPriceEth: BigNumber;
      rewardTokenPriceEth: BigNumber;
      stakeApy: BigNumber;
      distributionPerSecond: BigNumber;
      distributionEnd: BigNumber;
      stakeTokenUserBalance: BigNumber;
      underlyingTokenUserBalance: BigNumber;
      userCooldown: BigNumber;
      userIncentivesToClaim: BigNumber;
      userPermitNonce: BigNumber;
      0: BigNumber;
      1: BigNumber;
      2: BigNumber;
      3: BigNumber;
      4: BigNumber;
      5: BigNumber;
      6: BigNumber;
      7: BigNumber;
      8: BigNumber;
      9: BigNumber;
      10: BigNumber;
      11: BigNumber;
      12: BigNumber;
    };
    2: BigNumber;
  }>;

  'getUserUIData(address)'(
    user: string,
    overrides?: CallOverrides
  ): Promise<{
    0: {
      stakeTokenTotalSupply: BigNumber;
      stakeCooldownSeconds: BigNumber;
      stakeUnstakeWindow: BigNumber;
      stakeTokenPriceEth: BigNumber;
      rewardTokenPriceEth: BigNumber;
      stakeApy: BigNumber;
      distributionPerSecond: BigNumber;
      distributionEnd: BigNumber;
      stakeTokenUserBalance: BigNumber;
      underlyingTokenUserBalance: BigNumber;
      userCooldown: BigNumber;
      userIncentivesToClaim: BigNumber;
      userPermitNonce: BigNumber;
      0: BigNumber;
      1: BigNumber;
      2: BigNumber;
      3: BigNumber;
      4: BigNumber;
      5: BigNumber;
      6: BigNumber;
      7: BigNumber;
      8: BigNumber;
      9: BigNumber;
      10: BigNumber;
      11: BigNumber;
      12: BigNumber;
    };
    1: {
      stakeTokenTotalSupply: BigNumber;
      stakeCooldownSeconds: BigNumber;
      stakeUnstakeWindow: BigNumber;
      stakeTokenPriceEth: BigNumber;
      rewardTokenPriceEth: BigNumber;
      stakeApy: BigNumber;
      distributionPerSecond: BigNumber;
      distributionEnd: BigNumber;
      stakeTokenUserBalance: BigNumber;
      underlyingTokenUserBalance: BigNumber;
      userCooldown: BigNumber;
      userIncentivesToClaim: BigNumber;
      userPermitNonce: BigNumber;
      0: BigNumber;
      1: BigNumber;
      2: BigNumber;
      3: BigNumber;
      4: BigNumber;
      5: BigNumber;
      6: BigNumber;
      7: BigNumber;
      8: BigNumber;
      9: BigNumber;
      10: BigNumber;
      11: BigNumber;
      12: BigNumber;
    };
    2: BigNumber;
  }>;

  callStatic: {
    getStkAaveData(
      user: string,
      overrides?: CallOverrides
    ): Promise<{
      stakeTokenTotalSupply: BigNumber;
      stakeCooldownSeconds: BigNumber;
      stakeUnstakeWindow: BigNumber;
      stakeTokenPriceEth: BigNumber;
      rewardTokenPriceEth: BigNumber;
      stakeApy: BigNumber;
      distributionPerSecond: BigNumber;
      distributionEnd: BigNumber;
      stakeTokenUserBalance: BigNumber;
      underlyingTokenUserBalance: BigNumber;
      userCooldown: BigNumber;
      userIncentivesToClaim: BigNumber;
      userPermitNonce: BigNumber;
      0: BigNumber;
      1: BigNumber;
      2: BigNumber;
      3: BigNumber;
      4: BigNumber;
      5: BigNumber;
      6: BigNumber;
      7: BigNumber;
      8: BigNumber;
      9: BigNumber;
      10: BigNumber;
      11: BigNumber;
      12: BigNumber;
    }>;

    'getStkAaveData(address)'(
      user: string,
      overrides?: CallOverrides
    ): Promise<{
      stakeTokenTotalSupply: BigNumber;
      stakeCooldownSeconds: BigNumber;
      stakeUnstakeWindow: BigNumber;
      stakeTokenPriceEth: BigNumber;
      rewardTokenPriceEth: BigNumber;
      stakeApy: BigNumber;
      distributionPerSecond: BigNumber;
      distributionEnd: BigNumber;
      stakeTokenUserBalance: BigNumber;
      underlyingTokenUserBalance: BigNumber;
      userCooldown: BigNumber;
      userIncentivesToClaim: BigNumber;
      userPermitNonce: BigNumber;
      0: BigNumber;
      1: BigNumber;
      2: BigNumber;
      3: BigNumber;
      4: BigNumber;
      5: BigNumber;
      6: BigNumber;
      7: BigNumber;
      8: BigNumber;
      9: BigNumber;
      10: BigNumber;
      11: BigNumber;
      12: BigNumber;
    }>;

    getStkBptData(
      user: string,
      overrides?: CallOverrides
    ): Promise<{
      stakeTokenTotalSupply: BigNumber;
      stakeCooldownSeconds: BigNumber;
      stakeUnstakeWindow: BigNumber;
      stakeTokenPriceEth: BigNumber;
      rewardTokenPriceEth: BigNumber;
      stakeApy: BigNumber;
      distributionPerSecond: BigNumber;
      distributionEnd: BigNumber;
      stakeTokenUserBalance: BigNumber;
      underlyingTokenUserBalance: BigNumber;
      userCooldown: BigNumber;
      userIncentivesToClaim: BigNumber;
      userPermitNonce: BigNumber;
      0: BigNumber;
      1: BigNumber;
      2: BigNumber;
      3: BigNumber;
      4: BigNumber;
      5: BigNumber;
      6: BigNumber;
      7: BigNumber;
      8: BigNumber;
      9: BigNumber;
      10: BigNumber;
      11: BigNumber;
      12: BigNumber;
    }>;

    'getStkBptData(address)'(
      user: string,
      overrides?: CallOverrides
    ): Promise<{
      stakeTokenTotalSupply: BigNumber;
      stakeCooldownSeconds: BigNumber;
      stakeUnstakeWindow: BigNumber;
      stakeTokenPriceEth: BigNumber;
      rewardTokenPriceEth: BigNumber;
      stakeApy: BigNumber;
      distributionPerSecond: BigNumber;
      distributionEnd: BigNumber;
      stakeTokenUserBalance: BigNumber;
      underlyingTokenUserBalance: BigNumber;
      userCooldown: BigNumber;
      userIncentivesToClaim: BigNumber;
      userPermitNonce: BigNumber;
      0: BigNumber;
      1: BigNumber;
      2: BigNumber;
      3: BigNumber;
      4: BigNumber;
      5: BigNumber;
      6: BigNumber;
      7: BigNumber;
      8: BigNumber;
      9: BigNumber;
      10: BigNumber;
      11: BigNumber;
      12: BigNumber;
    }>;

    getUserUIData(
      user: string,
      overrides?: CallOverrides
    ): Promise<{
      0: {
        stakeTokenTotalSupply: BigNumber;
        stakeCooldownSeconds: BigNumber;
        stakeUnstakeWindow: BigNumber;
        stakeTokenPriceEth: BigNumber;
        rewardTokenPriceEth: BigNumber;
        stakeApy: BigNumber;
        distributionPerSecond: BigNumber;
        distributionEnd: BigNumber;
        stakeTokenUserBalance: BigNumber;
        underlyingTokenUserBalance: BigNumber;
        userCooldown: BigNumber;
        userIncentivesToClaim: BigNumber;
        userPermitNonce: BigNumber;
        0: BigNumber;
        1: BigNumber;
        2: BigNumber;
        3: BigNumber;
        4: BigNumber;
        5: BigNumber;
        6: BigNumber;
        7: BigNumber;
        8: BigNumber;
        9: BigNumber;
        10: BigNumber;
        11: BigNumber;
        12: BigNumber;
      };
      1: {
        stakeTokenTotalSupply: BigNumber;
        stakeCooldownSeconds: BigNumber;
        stakeUnstakeWindow: BigNumber;
        stakeTokenPriceEth: BigNumber;
        rewardTokenPriceEth: BigNumber;
        stakeApy: BigNumber;
        distributionPerSecond: BigNumber;
        distributionEnd: BigNumber;
        stakeTokenUserBalance: BigNumber;
        underlyingTokenUserBalance: BigNumber;
        userCooldown: BigNumber;
        userIncentivesToClaim: BigNumber;
        userPermitNonce: BigNumber;
        0: BigNumber;
        1: BigNumber;
        2: BigNumber;
        3: BigNumber;
        4: BigNumber;
        5: BigNumber;
        6: BigNumber;
        7: BigNumber;
        8: BigNumber;
        9: BigNumber;
        10: BigNumber;
        11: BigNumber;
        12: BigNumber;
      };
      2: BigNumber;
    }>;

    'getUserUIData(address)'(
      user: string,
      overrides?: CallOverrides
    ): Promise<{
      0: {
        stakeTokenTotalSupply: BigNumber;
        stakeCooldownSeconds: BigNumber;
        stakeUnstakeWindow: BigNumber;
        stakeTokenPriceEth: BigNumber;
        rewardTokenPriceEth: BigNumber;
        stakeApy: BigNumber;
        distributionPerSecond: BigNumber;
        distributionEnd: BigNumber;
        stakeTokenUserBalance: BigNumber;
        underlyingTokenUserBalance: BigNumber;
        userCooldown: BigNumber;
        userIncentivesToClaim: BigNumber;
        userPermitNonce: BigNumber;
        0: BigNumber;
        1: BigNumber;
        2: BigNumber;
        3: BigNumber;
        4: BigNumber;
        5: BigNumber;
        6: BigNumber;
        7: BigNumber;
        8: BigNumber;
        9: BigNumber;
        10: BigNumber;
        11: BigNumber;
        12: BigNumber;
      };
      1: {
        stakeTokenTotalSupply: BigNumber;
        stakeCooldownSeconds: BigNumber;
        stakeUnstakeWindow: BigNumber;
        stakeTokenPriceEth: BigNumber;
        rewardTokenPriceEth: BigNumber;
        stakeApy: BigNumber;
        distributionPerSecond: BigNumber;
        distributionEnd: BigNumber;
        stakeTokenUserBalance: BigNumber;
        underlyingTokenUserBalance: BigNumber;
        userCooldown: BigNumber;
        userIncentivesToClaim: BigNumber;
        userPermitNonce: BigNumber;
        0: BigNumber;
        1: BigNumber;
        2: BigNumber;
        3: BigNumber;
        4: BigNumber;
        5: BigNumber;
        6: BigNumber;
        7: BigNumber;
        8: BigNumber;
        9: BigNumber;
        10: BigNumber;
        11: BigNumber;
        12: BigNumber;
      };
      2: BigNumber;
    }>;
  };

  filters: {};

  estimateGas: {
    getStkAaveData(user: string, overrides?: CallOverrides): Promise<BigNumber>;

    'getStkAaveData(address)'(user: string, overrides?: CallOverrides): Promise<BigNumber>;

    getStkBptData(user: string, overrides?: CallOverrides): Promise<BigNumber>;

    'getStkBptData(address)'(user: string, overrides?: CallOverrides): Promise<BigNumber>;

    getUserUIData(user: string, overrides?: CallOverrides): Promise<BigNumber>;

    'getUserUIData(address)'(user: string, overrides?: CallOverrides): Promise<BigNumber>;
  };

  populateTransaction: {
    getStkAaveData(user: string, overrides?: CallOverrides): Promise<PopulatedTransaction>;

    'getStkAaveData(address)'(
      user: string,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    getStkBptData(user: string, overrides?: CallOverrides): Promise<PopulatedTransaction>;

    'getStkBptData(address)'(
      user: string,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    getUserUIData(user: string, overrides?: CallOverrides): Promise<PopulatedTransaction>;

    'getUserUIData(address)'(
      user: string,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;
  };
}

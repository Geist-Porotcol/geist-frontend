/* Generated by ts-generator ver. 0.0.8 */
/* tslint:disable */

import { ethers, EventFilter, Signer, BigNumber, BigNumberish, PopulatedTransaction } from 'ethers';
import { Contract, ContractTransaction, CallOverrides } from '@ethersproject/contracts';
import { BytesLike } from '@ethersproject/bytes';
import { Listener, Provider } from '@ethersproject/providers';
import { FunctionFragment, EventFragment, Result } from '@ethersproject/abi';

interface IBaseUniswapAdapterInterface extends ethers.utils.Interface {
  functions: {
    'getAmountsIn(uint256,address,address)': FunctionFragment;
    'getAmountsOut(uint256,address,address)': FunctionFragment;
  };

  encodeFunctionData(
    functionFragment: 'getAmountsIn',
    values: [BigNumberish, string, string]
  ): string;
  encodeFunctionData(
    functionFragment: 'getAmountsOut',
    values: [BigNumberish, string, string]
  ): string;

  decodeFunctionResult(functionFragment: 'getAmountsIn', data: BytesLike): Result;
  decodeFunctionResult(functionFragment: 'getAmountsOut', data: BytesLike): Result;

  events: {};
}

export class IBaseUniswapAdapter extends Contract {
  connect(signerOrProvider: Signer | Provider | string): this;
  attach(addressOrName: string): this;
  deployed(): Promise<this>;

  on(event: EventFilter | string, listener: Listener): this;
  once(event: EventFilter | string, listener: Listener): this;
  addListener(eventName: EventFilter | string, listener: Listener): this;
  removeAllListeners(eventName: EventFilter | string): this;
  removeListener(eventName: any, listener: Listener): this;

  interface: IBaseUniswapAdapterInterface;

  functions: {
    getAmountsIn(
      amountOut: BigNumberish,
      reserveIn: string,
      reserveOut: string,
      overrides?: CallOverrides
    ): Promise<{
      0: BigNumber;
      1: BigNumber;
      2: BigNumber;
      3: BigNumber;
      4: string[];
    }>;

    'getAmountsIn(uint256,address,address)'(
      amountOut: BigNumberish,
      reserveIn: string,
      reserveOut: string,
      overrides?: CallOverrides
    ): Promise<{
      0: BigNumber;
      1: BigNumber;
      2: BigNumber;
      3: BigNumber;
      4: string[];
    }>;

    getAmountsOut(
      amountIn: BigNumberish,
      reserveIn: string,
      reserveOut: string,
      overrides?: CallOverrides
    ): Promise<{
      0: BigNumber;
      1: BigNumber;
      2: BigNumber;
      3: BigNumber;
      4: string[];
    }>;

    'getAmountsOut(uint256,address,address)'(
      amountIn: BigNumberish,
      reserveIn: string,
      reserveOut: string,
      overrides?: CallOverrides
    ): Promise<{
      0: BigNumber;
      1: BigNumber;
      2: BigNumber;
      3: BigNumber;
      4: string[];
    }>;
  };

  getAmountsIn(
    amountOut: BigNumberish,
    reserveIn: string,
    reserveOut: string,
    overrides?: CallOverrides
  ): Promise<{
    0: BigNumber;
    1: BigNumber;
    2: BigNumber;
    3: BigNumber;
    4: string[];
  }>;

  'getAmountsIn(uint256,address,address)'(
    amountOut: BigNumberish,
    reserveIn: string,
    reserveOut: string,
    overrides?: CallOverrides
  ): Promise<{
    0: BigNumber;
    1: BigNumber;
    2: BigNumber;
    3: BigNumber;
    4: string[];
  }>;

  getAmountsOut(
    amountIn: BigNumberish,
    reserveIn: string,
    reserveOut: string,
    overrides?: CallOverrides
  ): Promise<{
    0: BigNumber;
    1: BigNumber;
    2: BigNumber;
    3: BigNumber;
    4: string[];
  }>;

  'getAmountsOut(uint256,address,address)'(
    amountIn: BigNumberish,
    reserveIn: string,
    reserveOut: string,
    overrides?: CallOverrides
  ): Promise<{
    0: BigNumber;
    1: BigNumber;
    2: BigNumber;
    3: BigNumber;
    4: string[];
  }>;

  callStatic: {
    getAmountsIn(
      amountOut: BigNumberish,
      reserveIn: string,
      reserveOut: string,
      overrides?: CallOverrides
    ): Promise<{
      0: BigNumber;
      1: BigNumber;
      2: BigNumber;
      3: BigNumber;
      4: string[];
    }>;

    'getAmountsIn(uint256,address,address)'(
      amountOut: BigNumberish,
      reserveIn: string,
      reserveOut: string,
      overrides?: CallOverrides
    ): Promise<{
      0: BigNumber;
      1: BigNumber;
      2: BigNumber;
      3: BigNumber;
      4: string[];
    }>;

    getAmountsOut(
      amountIn: BigNumberish,
      reserveIn: string,
      reserveOut: string,
      overrides?: CallOverrides
    ): Promise<{
      0: BigNumber;
      1: BigNumber;
      2: BigNumber;
      3: BigNumber;
      4: string[];
    }>;

    'getAmountsOut(uint256,address,address)'(
      amountIn: BigNumberish,
      reserveIn: string,
      reserveOut: string,
      overrides?: CallOverrides
    ): Promise<{
      0: BigNumber;
      1: BigNumber;
      2: BigNumber;
      3: BigNumber;
      4: string[];
    }>;
  };

  filters: {};

  estimateGas: {
    getAmountsIn(
      amountOut: BigNumberish,
      reserveIn: string,
      reserveOut: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    'getAmountsIn(uint256,address,address)'(
      amountOut: BigNumberish,
      reserveIn: string,
      reserveOut: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    getAmountsOut(
      amountIn: BigNumberish,
      reserveIn: string,
      reserveOut: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    'getAmountsOut(uint256,address,address)'(
      amountIn: BigNumberish,
      reserveIn: string,
      reserveOut: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;
  };

  populateTransaction: {
    getAmountsIn(
      amountOut: BigNumberish,
      reserveIn: string,
      reserveOut: string,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    'getAmountsIn(uint256,address,address)'(
      amountOut: BigNumberish,
      reserveIn: string,
      reserveOut: string,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    getAmountsOut(
      amountIn: BigNumberish,
      reserveIn: string,
      reserveOut: string,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    'getAmountsOut(uint256,address,address)'(
      amountIn: BigNumberish,
      reserveIn: string,
      reserveOut: string,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;
  };
}
